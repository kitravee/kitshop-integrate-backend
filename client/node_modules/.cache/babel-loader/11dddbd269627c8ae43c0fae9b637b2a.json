{"ast":null,"code":"import _objectSpread from \"A:\\\\complete-react\\\\integration-backend\\\\kitshop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//when we add mutiple item, it is dupplicated, avoid by adding new property \"quantity\"\n// Utility functions allow us to keep our file clean and organize in one location\n// function that we may need in multiple file\n// Note Param \"cartItems\" is item in array\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const exitingCartItem = cartItems.find( //base on if if find return \"data in array\" else return \"undefined\"\n  cartItem => cartItem.id === cartItemToAdd.id); //check exitingCartItem if true\n\n  if (exitingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  // if each cartItem match with cartItemToRemove\n  const exitingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // if quantity === 1 filter it out\n\n  if (exitingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? // if match return with quantity - 1\n  _objectSpread({}, cartItem, {\n    quantity: cartItem.quantity - 1\n  }) : cartItem);\n};","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","exitingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";AAAA;AAEA;AACA;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,eAAe,GAAGF,SAAS,CAACG,IAAV,EACtB;AACCC,EAAAA,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAFtB,CAAxB,CADyD,CAMzD;;AACA,MAAIH,eAAJ,EAAqB;AACnB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACSD,QADT;AACmBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AADjD,SAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAhBM;AAkBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACjE;AACA,QAAMP,eAAe,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADzB,CAAxB,CAFiE,CAKjE;;AACA,MAAIH,eAAe,CAACK,QAAhB,KAA6B,CAAjC,EAAoC;AAClC,WAAOP,SAAS,CAACU,MAAV,CAAkBN,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAhE,CAAP;AACD;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI;AADJ,oBAESD,QAFT;AAEmBG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAFjD,OAGIH,QAJC,CAAP;AAMD,CAhBM","sourcesContent":["//when we add mutiple item, it is dupplicated, avoid by adding new property \"quantity\"\r\n\r\n// Utility functions allow us to keep our file clean and organize in one location\r\n// function that we may need in multiple file\r\n\r\n// Note Param \"cartItems\" is item in array\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  const exitingCartItem = cartItems.find(\r\n    //base on if if find return \"data in array\" else return \"undefined\"\r\n    (cartItem) => cartItem.id === cartItemToAdd.id\r\n  );\r\n\r\n  //check exitingCartItem if true\r\n  if (exitingCartItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  // if each cartItem match with cartItemToRemove\r\n  const exitingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToRemove.id\r\n  );\r\n  // if quantity === 1 filter it out\r\n  if (exitingCartItem.quantity === 1) {\r\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\r\n  }\r\n\r\n  return cartItems.map((cartItem) =>\r\n    cartItem.id === cartItemToRemove.id\r\n      ? // if match return with quantity - 1\r\n        { ...cartItem, quantity: cartItem.quantity - 1 }\r\n      : cartItem\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}