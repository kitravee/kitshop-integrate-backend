{"ast":null,"code":"import _objectSpread from \"A:\\\\complete-react\\\\integration-backend\\\\kitshop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"A:\\\\complete-react\\\\integration-backend\\\\kitshop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"A:\\\\complete-react\\\\integration-backend\\\\kitshop\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     displayName: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //     confirmPassword: \"\",\n  //   };\n  // }\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCridential = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { signUpStart } = this.props;\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); // this.setState({\n    //   displayName: \"\",\n    //   email: \"\",\n    //   password: \"\",\n    //   confirmPassword: \"\",\n    // });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCridential(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    handleChange: handleChange,\n    value: displayName,\n    label: \"displayName\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: password,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: confirmPassword,\n    label: \"confirmPassword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \" Sign up \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCridential","handleSubmit","event","preventDefault","alert","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport \"./sign-up.styles.scss\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  // constructor() {\r\n  //   super();\r\n\r\n  //   this.state = {\r\n  //     displayName: \"\",\r\n  //     email: \"\",\r\n  //     password: \"\",\r\n  //     confirmPassword: \"\",\r\n  //   };\r\n  // }\r\n\r\n  const [userCredentials, setCridential] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // const { signUpStart } = this.props;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"password don't match\");\r\n      return;\r\n    }\r\n    signUpStart({ displayName, email, password });\r\n\r\n    // this.setState({\r\n    //   displayName: \"\",\r\n    //   email: \"\",\r\n    //   password: \"\",\r\n    //   confirmPassword: \"\",\r\n    // });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setCridential({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h2 className=\"title\">I do not have a account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name=\"displayName\"\r\n          type=\"text\"\r\n          handleChange={handleChange}\r\n          value={displayName}\r\n          label=\"displayName\"\r\n          required\r\n        />\r\n        <FormInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          handleChange={handleChange}\r\n          value={email}\r\n          label=\"email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          handleChange={handleChange}\r\n          value={password}\r\n          label=\"password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          handleChange={handleChange}\r\n          value={confirmPassword}\r\n          label=\"confirmPassword\"\r\n          required\r\n        />\r\n        <div className=\"buttons\">\r\n          <CustomButton type=\"submit\"> Sign up </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}