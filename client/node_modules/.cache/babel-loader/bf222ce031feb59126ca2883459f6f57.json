{"ast":null,"code":"var _jsxFileName = \"A:\\\\complete-react\\\\integration-backend\\\\kitshop\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\"; //redux-persist -> can use in multiple platform react-native electron\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\"; // Redux setup 1\n// 1) yarn add redux redux-logger react-redux\n// At index.js we will put new component that we get from react redux newGive app access store and reducer\n// Provider wrap around App because we want app to have access to this store object that we get from redux\n// Provider is parent of everything\n// 2) we will create the store at folder redux that we will store all of our code that relate to redux\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","PersistGate","store","persistor","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,eAAjC;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEAN,QAAQ,CAACO,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n//redux-persist -> can use in multiple platform react-native electron\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n// Redux setup 1\r\n// 1) yarn add redux redux-logger react-redux\r\n// At index.js we will put new component that we get from react redux newGive app access store and reducer\r\n// Provider wrap around App because we want app to have access to this store object that we get from redux\r\n// Provider is parent of everything\r\n// 2) we will create the store at folder redux that we will store all of our code that relate to redux\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"]},"metadata":{},"sourceType":"module"}