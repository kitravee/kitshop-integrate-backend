{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // Now collection overview not work because we do Data normalization, so we will convert Obj -> Arr\n\nexport const selectCollectionForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // Data normalization [] => {}\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching); //!!{} = true !!false = false when notload return true so wraploading is render else\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACE,WAF8B,CAAxC,C,CAKP;;AACA,OAAO,MAAMC,0BAA0B,GAAGN,cAAc,CACtD,CAACI,iBAAD,CADsD,EAErDC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHpB,CAAjD,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IAClCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,2BAA2B,GAAGb,cAAc,CACvD,CAACC,UAAD,CADuD,EAEtDE,IAAD,IAAUA,IAAI,CAACW,UAFwC,CAAlD,C,CAKP;;AAEA,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAEpDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections,\r\n);\r\n\r\n// Now collection overview not work because we do Data normalization, so we will convert Obj -> Arr\r\nexport const selectCollectionForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : [],\r\n);\r\n\r\n// Data normalization [] => {}\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null,\r\n  );\r\n\r\nexport const selectIsCollectionsFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching,\r\n);\r\n\r\n//!!{} = true !!false = false when notload return true so wraploading is render else\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections,\r\n);\r\n"]},"metadata":{},"sourceType":"module"}