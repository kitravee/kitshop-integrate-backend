{"ast":null,"code":"// reducer object that represents all of the state of our application\n// 3) create Reducer and Root reducer\n// combineReducers between root and other individual\nimport { combineReducers } from \"redux\"; // install local or session storage\n\nimport { persistReducer } from \"redux-persist\"; //Want local storage\n\nimport storage from \"redux-persist/lib/storage\"; //can also import session\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"]\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer); // 4) we will bring rootReducer to store (Create store)\n// 5) Create action","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA;AACA;AAEA;AACA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAMA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,IAAI,EAAER,WAD4B;AAElCS,EAAAA,IAAI,EAAER,WAF4B;AAGlCS,EAAAA,SAAS,EAAER,gBAHuB;AAIlCS,EAAAA,IAAI,EAAER;AAJ4B,CAAD,CAAnC;AAOA,eAAeL,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B,C,CAEA;AACA","sourcesContent":["// reducer object that represents all of the state of our application\r\n// 3) create Reducer and Root reducer\r\n\r\n// combineReducers between root and other individual\r\nimport { combineReducers } from \"redux\";\r\n\r\n// install local or session storage\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\n//Want local storage\r\nimport storage from \"redux-persist/lib/storage\";\r\n//can also import session\r\n\r\nimport userReducer from \"./user/user.reducer\";\r\nimport cartReducer from \"./cart/cart.reducer\";\r\nimport directoryReducer from \"./directory/directory.reducer\";\r\nimport shopReducer from \"./shop/shop.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"cart\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  cart: cartReducer,\r\n  directory: directoryReducer,\r\n  shop: shopReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n\r\n// 4) we will bring rootReducer to store (Create store)\r\n// 5) Create action\r\n"]},"metadata":{},"sourceType":"module"}