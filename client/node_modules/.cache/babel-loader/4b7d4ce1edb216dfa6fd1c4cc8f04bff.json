{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\"; //install redux-persist\n\nimport { persistStore } from \"redux-persist\"; // logger is middleware\n\nimport logger from \"redux-logger\"; // import thunk from \"redux-thunk\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware(); // push logger to middle ware\n\nconst middlewares = [sagaMiddleware]; // normal it set to development\n// development production and test\n// when development use logger but production we not use logger\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store); // we will inport in index.js to pass the store context into Provider\n\nsagaMiddleware.run(rootSaga);","map":{"version":3,"sources":["A:/complete-react/integration-backend/kitshop/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAEA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;AACA;AACA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEP,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B,C,CAEP;;AACAN,cAAc,CAACQ,GAAf,CAAmBT,QAAnB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\n\r\n//install redux-persist\r\nimport { persistStore } from \"redux-persist\";\r\n\r\n// logger is middleware\r\nimport logger from \"redux-logger\";\r\n\r\n// import thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// push logger to middle ware\r\nconst middlewares = [sagaMiddleware];\r\n\r\n// normal it set to development\r\n// development production and test\r\n// when development use logger but production we not use logger\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// we will inport in index.js to pass the store context into Provider\r\nsagaMiddleware.run(rootSaga);\r\n"]},"metadata":{},"sourceType":"module"}